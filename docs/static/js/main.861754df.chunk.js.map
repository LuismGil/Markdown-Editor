{"version":3,"sources":["index.js"],"names":["marked","setOptions","breaks","gfm","MarkdownEditor","props","handleChange","e","setState","text","target","value","state","bind","this","markdown","className","Editor","onChange","id","dangerouslySetInnerHTML","__html","React","Component","type","ReactDOM","render","document","getElementById"],"mappings":"sOAuCAA,IAAOC,WAAW,CAChBC,QAAQ,EACRC,KAAK,I,IAGDC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZC,KAAMF,EAAEG,OAAOC,SARjB,EAAKC,MAAQ,CACXH,KA1CW,2mBA4Cb,EAAKH,aAAe,EAAKA,aAAaO,KAAlB,gBALH,E,qDAcT,IACAJ,EAASK,KAAKF,MAAdH,KACFM,EAAWf,IAAOS,GAExB,OACE,gCACE,oBAAIO,UAAU,kBAAd,6BACA,uBACA,sBAAKA,UAAU,YAAf,UACE,cAACC,EAAD,CAAQR,KAAMA,EAAMS,SAAUJ,KAAKR,eACnC,gCACE,oBAAIU,UAAU,cAAd,uBACA,qBACEA,UAAU,sCACVG,GAAG,UACHC,wBAAyB,CAAEC,OAAQN,WAIzC,wBAAQC,UAAU,kBAAlB,kC,GAlCqBM,IAAMC,WAwC7BN,EAAS,SAAAZ,GACb,OACE,sBAAKW,UAAU,cAAf,UACE,wCACA,0BACEA,UAAU,qCACVG,GAAG,SACHD,SAAUb,EAAMa,SAChBM,KAAK,OACLb,MAAON,EAAMI,WAMrBgB,IAASC,OAAO,cAACtB,EAAD,IAAoBuB,SAASC,eAAe,U","file":"static/js/main.861754df.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss';\n// import App from './App';\nimport marked from 'marked';\n\nconst placeholder = `# This is my Markdown Editor\n## You can write in markdown here\n\nAn HTML container is \\`<div><div>\\`\n\nIf your want you can see if click [here](https://codepen.io/luismgil/full/poNzVZN).\n\n\\`\\`\\`\nclass MarkdownEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: placeholder,\n    };\n\\`\\`\\`\n\n- List Test 1\n- List Test 2\n- List Test 3\n\n~~~\nThis is a block code\n  Only for test\n~~~\n\n![nice Cat](https://i.imgur.com/45vZ9A3.jpg)\n\n**A nice cat image :D**\n\n> 'Work gives you meaning and purpose and life is empty without it.'\n\nâ€“ Stephen Hawking`;\n\nmarked.setOptions({\n  breaks: true,\n  gfm: true,\n});\n\nclass MarkdownEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: placeholder,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = e => {\n    this.setState({\n      text: e.target.value,\n    });\n  };\n\n  render() {\n    const { text } = this.state;\n    const markdown = marked(text);\n\n    return (\n      <div>\n        <h1 className=\"text-center m-4\">Markdown Editor</h1>\n        <hr />\n        <div className=\"container\">\n          <Editor text={text} onChange={this.handleChange} />\n          <div>\n            <h4 className=\"text-center\"> Preview </h4>\n            <div\n              className=\"container__preview form-control m-2\"\n              id=\"preview\"\n              dangerouslySetInnerHTML={{ __html: markdown }}\n            />\n          </div>\n        </div>\n        <footer className=\"text-center m-4\">by Luis M Gil</footer>\n      </div>\n    );\n  }\n}\n\nconst Editor = props => {\n  return (\n    <div className=\"text-center\">\n      <h4>Editor</h4>\n      <textarea\n        className=\"container__editor form-control m-2\"\n        id=\"editor\"\n        onChange={props.onChange}\n        type=\"text\"\n        value={props.text}\n      />\n    </div>\n  );\n};\n\nReactDOM.render(<MarkdownEditor />, document.getElementById('root'));\n"],"sourceRoot":""}